{"changed":true,"filter":false,"title":"registration_controller.rb","tooltip":"/app/controllers/authentication/item_owners/registration_controller.rb","value":"# frozen_string_literal: true\n\nclass Authentication::ItemOwners::RegistrationsController < Devise::RegistrationsController\n  # before_action :configure_sign_up_params, only: [:create]\n  # before_action :configure_account_update_params, only: [:update]\n  before_action :configure_permitted_parameters, if: :devise_controller?\n  # before_action :verify_account_ownership, only: :create\n\n  # GET /resource/sign_up\n  # def new\n  #   super\n  # end\n\n  # POST /resource\n  def create\n    super\n  end\n\n  # GET /resource/edit\n  # def edit\n  #   super\n  # end\n\n  # PUT /resource\n  # def update\n  #   super\n  # end\n\n  # DELETE /resource\n  # def destroy\n  #   super\n  # end\n\n  # GET /resource/cancel\n  # Forces the session data which is usually expired after sign\n  # in to be expired now. This is useful if the user wants to\n  # cancel oauth signing in/up in the middle of the process,\n  # removing all OAuth session data.\n  # def cancel\n  #   super\n  # end\n\n  # protected\n\n  def configure_permitted_parameters\n    devise_parameter_sanitizer.permit(:sign_up, keys: [:email, :username, :username_display, :password])\n    devise_parameter_sanitizer.permit(:sign_in, keys: [:email, :password])\n  end\n  \n  def after_sign_up_path_for(resource)\n    registration_step_one_path\n  end\n  \n  def after_sign_in_path_for(resource_or_scope)\n    stored_location_for(resource_or_scope) || super\n  end\n  \n  # def verify_account_ownership\n  #   if session[:username] != params[:user][:username]\n  #     redirect_to :back, notice: \"We're unable to verify that this Instagram is yours. Please try again\"\n  #     return\n  #   end\n  # end\n\n  # The path used after sign up for inactive accounts.\n  # def after_inactive_sign_up_path_for(resource)\n  #   super(resource)\n  # end\nend","undoManager":{"mark":-2,"position":3,"stack":[[{"start":{"row":0,"column":0},"end":{"row":68,"column":3},"action":"insert","lines":["# frozen_string_literal: true","","class Users::RegistrationsController < Devise::RegistrationsController","  # before_action :configure_sign_up_params, only: [:create]","  # before_action :configure_account_update_params, only: [:update]","  before_action :configure_permitted_parameters, if: :devise_controller?","  # before_action :verify_account_ownership, only: :create","","  # GET /resource/sign_up","  # def new","  #   super","  # end","","  # POST /resource","  def create","    super","  end","","  # GET /resource/edit","  # def edit","  #   super","  # end","","  # PUT /resource","  # def update","  #   super","  # end","","  # DELETE /resource","  # def destroy","  #   super","  # end","","  # GET /resource/cancel","  # Forces the session data which is usually expired after sign","  # in to be expired now. This is useful if the user wants to","  # cancel oauth signing in/up in the middle of the process,","  # removing all OAuth session data.","  # def cancel","  #   super","  # end","","  # protected","","  def configure_permitted_parameters","    devise_parameter_sanitizer.permit(:sign_up, keys: [:email, :username, :username_display, :password])","    devise_parameter_sanitizer.permit(:sign_in, keys: [:email, :password])","  end","  ","  def after_sign_up_path_for(resource)","    registration_step_one_path","  end","  ","  def after_sign_in_path_for(resource_or_scope)","    stored_location_for(resource_or_scope) || super","  end","  ","  # def verify_account_ownership","  #   if session[:username] != params[:user][:username]","  #     redirect_to :back, notice: \"We're unable to verify that this Instagram is yours. Please try again\"","  #     return","  #   end","  # end","","  # The path used after sign up for inactive accounts.","  # def after_inactive_sign_up_path_for(resource)","  #   super(resource)","  # end","end"],"id":1}],[{"start":{"row":2,"column":6},"end":{"row":2,"column":11},"action":"remove","lines":["Users"],"id":2},{"start":{"row":2,"column":6},"end":{"row":2,"column":7},"action":"insert","lines":["A"]},{"start":{"row":2,"column":7},"end":{"row":2,"column":8},"action":"insert","lines":["u"]},{"start":{"row":2,"column":8},"end":{"row":2,"column":9},"action":"insert","lines":["t"]},{"start":{"row":2,"column":9},"end":{"row":2,"column":10},"action":"insert","lines":["h"]},{"start":{"row":2,"column":10},"end":{"row":2,"column":11},"action":"insert","lines":["e"]},{"start":{"row":2,"column":11},"end":{"row":2,"column":12},"action":"insert","lines":["n"]},{"start":{"row":2,"column":12},"end":{"row":2,"column":13},"action":"insert","lines":["t"]},{"start":{"row":2,"column":13},"end":{"row":2,"column":14},"action":"insert","lines":["i"]},{"start":{"row":2,"column":14},"end":{"row":2,"column":15},"action":"insert","lines":["c"]},{"start":{"row":2,"column":15},"end":{"row":2,"column":16},"action":"insert","lines":["a"]},{"start":{"row":2,"column":16},"end":{"row":2,"column":17},"action":"insert","lines":["t"]},{"start":{"row":2,"column":17},"end":{"row":2,"column":18},"action":"insert","lines":["i"]},{"start":{"row":2,"column":18},"end":{"row":2,"column":19},"action":"insert","lines":["o"]},{"start":{"row":2,"column":19},"end":{"row":2,"column":20},"action":"insert","lines":["n"]}],[{"start":{"row":2,"column":22},"end":{"row":2,"column":23},"action":"insert","lines":["I"],"id":3},{"start":{"row":2,"column":23},"end":{"row":2,"column":24},"action":"insert","lines":["t"]},{"start":{"row":2,"column":24},"end":{"row":2,"column":25},"action":"insert","lines":["e"]},{"start":{"row":2,"column":25},"end":{"row":2,"column":26},"action":"insert","lines":["m"]},{"start":{"row":2,"column":26},"end":{"row":2,"column":27},"action":"insert","lines":["O"]},{"start":{"row":2,"column":27},"end":{"row":2,"column":28},"action":"insert","lines":["w"]},{"start":{"row":2,"column":28},"end":{"row":2,"column":29},"action":"insert","lines":["n"]},{"start":{"row":2,"column":29},"end":{"row":2,"column":30},"action":"insert","lines":["e"]},{"start":{"row":2,"column":30},"end":{"row":2,"column":31},"action":"insert","lines":["r"]},{"start":{"row":2,"column":31},"end":{"row":2,"column":32},"action":"insert","lines":["s"]}],[{"start":{"row":2,"column":32},"end":{"row":2,"column":33},"action":"insert","lines":[":"],"id":4},{"start":{"row":2,"column":33},"end":{"row":2,"column":34},"action":"insert","lines":[":"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":3,"column":58},"end":{"row":3,"column":58},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1569185285575}